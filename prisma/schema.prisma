//ingresar al contenedor 
// docker run -it -v $PWD:/home/prisma node:17-alpine3.15 sh
// moverse a la carpta
// cd /home/prisma
// ejecutar comando para actualizar base de datos
//npx prisma migrate dev --name nombre_de_la_modificacion

// This is your Prisma schema file,1
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Localidad {
  id                Int                     @default(autoincrement()) @id
  nombre            String
  alumnos           Alumno[]
  salas             Salas[]
  cursos            LocalidadOnCurso[]
  personal          Personal[]
}
model TipoCurso {
  id                Int                     @default(autoincrement()) @id
  nombre            String
  descripcion       String
  curso             Curso?
  }

model Turno {
  id                Int                     @default(autoincrement()) @id
  nombre            String
  descripcion       String?
  cursosActivos     CursosActivos[]
  }

model Curso {
  id                Int                     @default(autoincrement()) @id
  nombre            String
  descripcion       String
  destinatatios     DestinatarioOnCurso[]
  localidad         LocalidadOnCurso[]
  tipocurso         TipoCurso?               @relation(fields: [tipoCursoId], references: [id])
  tipoCursoId       Int
  personal          Personal               @relation(fields: [personalId], references: [id])
  personalId        Int
}
model LocalidadOnCurso {
  curso             Curso                   @relation(fields: [cursoId], references: [id])
  cursoId           Int
  localidad         Localidad               @relation(fields: [localidadId], references: [id])
  localidadId       Int
  nombreMostrar     String
  descripcion       String
  @@id([cursoId, localidadId])
  cursosActivos     CursosActivos[]
 // cursoActivo       CursosActivos?               @relation(fields: [cursoActivoId], references: [id])
 // cursoActivoId     Int?
  
}
model DestinatarioOnCurso {
  curso             Curso                   @relation(fields: [cursoId], references: [id])
  cursoId           Int
  destinatario      Destinatarios           @relation(fields: [destinatarioId], references: [id])
  destinatarioId       Int
  @@id([cursoId, destinatarioId])
  descripcion       String
  nombreMostrar     String
}

model AlumnoOnCursoActivo {
  cursoActivo       CursosActivos           @relation(fields: [cursoActivoId], references: [id])
  cursoActivoId     Int
  alumno            Alumno                  @relation(fields: [alumnoId], references: [id])
  alumnoId          Int
  @@id([cursoActivoId, alumnoId])
  descripcion       String
  nombreMostrar     String
}

model Alumno {
  id                Int                     @default(autoincrement()) @id
  nroDocumento      Int                     @unique
  apellido          String
  nombre            String     
  fechaNacimiento   DateTime                @db.Date
  email             String 
  celular           Int
  domicilio         String     
  barrio            String?
  localidad         Localidad               @relation(fields: [localidadId], references: [id])
  localidadId       Int
  cursoActivo       AlumnoOnCursoActivo[]
}
model Personal {
  id                Int                     @default(autoincrement()) @id
  nroDocumento      Int                     @unique
  apellido          String
  nombre            String     
  fechaNacimiento   DateTime                @db.Date
  email             String 
  celular           Int
  domicilio         String     
  barrio            String?
  localidad         Localidad               @relation(fields: [localidadId], references: [id])
  localidadId       Int
  curso             Curso[]
}
model Destinatarios {
  id                Int                     @default(autoincrement()) @id
  nombre            String
  edadInicio        Int
  edadFin           Int
  cursos            DestinatarioOnCurso[]
}


model Salas {
  id                Int                     @default(autoincrement()) @id
  nombre            String
  descripcion       String
  localidad         Localidad               @relation(fields: [localidadId], references: [id])
  localidadId       Int
  cursosActivos     CursosActivos?
}

model CursosActivos {
  id                Int                     @default(autoincrement()) @id
  nombreMostrar     String
  activo            Boolean
  fechaInicio       DateTime                @db.Date
  fechaFin          DateTime                @db.Date
  horario           String
  cupos             Int
  descripcion       String
  sala              Salas?                  @relation(fields: [salaId], references: [id])
  salaId            Int?
  alumnos           AlumnoOnCursoActivo[]
 // cursoLocalidad    LocalidadOnCurso[]
 localidadCurso     LocalidadOnCurso?       @relation(fields: [localidadId,cursoId], references: [localidadId,cursoId])
 localidadId        Int?
 cursoId            Int?
 turno              Turno?       @relation(fields: [turnoId], references: [id])
 turnoId        Int?
 
}


